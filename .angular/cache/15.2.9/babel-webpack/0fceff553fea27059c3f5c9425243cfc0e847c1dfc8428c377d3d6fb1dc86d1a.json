{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustomerService {\n  // Inyecta HttpClient en el constructor para poder utilizarlo en el servicio\n  constructor(http) {\n    this.http = http;\n  }\n  // Aquí puedes definir los métodos relacionados con la comunicación HTTP\n  getCustomers() {\n    const apiUrl = 'http://localhost:8080/api/cliente';\n    return this.http.get(apiUrl);\n  }\n  saveCustomer(newCustomer) {\n    const apiUrl = 'http://localhost:8080/api/cliente';\n    return this.http.post(apiUrl, newCustomer);\n  }\n  deleteCustomer(id) {\n    const apiUrl = `http://localhost:8080/api/cliente/${id}`;\n    return this.http.delete(apiUrl);\n  }\n}\nCustomerService.ɵfac = function CustomerService_Factory(t) {\n  return new (t || CustomerService)(i0.ɵɵinject(i1.HttpClient));\n};\nCustomerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomerService,\n  factory: CustomerService.ɵfac,\n  providedIn: 'root' // Esto asegura que el servicio esté disponible en toda la aplicación\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAC1B;EACAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExC;EACAC,YAAY;IACV,MAAMC,MAAM,GAAG,mCAAmC;IAClD,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAaD,MAAM,CAAC;EAC1C;EAEAE,YAAY,CAACC,WAAqB;IAChC,MAAMH,MAAM,GAAG,mCAAmC;IAClD,OAAO,IAAI,CAACF,IAAI,CAACM,IAAI,CAAWJ,MAAM,EAAEG,WAAW,CAAC;EACtD;EAEAE,cAAc,CAACC,EAAU;IACvB,MAAMN,MAAM,GAAG,qCAAqCM,EAAE,EAAE;IACxD,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAOP,MAAM,CAAC;EACvC;;AAlBWJ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAY,SAAfZ,eAAe;EAAAa,YAFd,MAAM,CAAC","names":["CustomerService","constructor","http","getCustomers","apiUrl","get","saveCustomer","newCustomer","post","deleteCustomer","id","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/marco/Documents/Developer/opticaCentro/opticaCentro/src/app/service/customer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Customer } from '../models/customer';\n\n@Injectable({\n  providedIn: 'root' // Esto asegura que el servicio esté disponible en toda la aplicación\n})\nexport class CustomerService {\n  // Inyecta HttpClient en el constructor para poder utilizarlo en el servicio\n  constructor(private http: HttpClient) { }\n  \n  // Aquí puedes definir los métodos relacionados con la comunicación HTTP\n  getCustomers(): Observable<Customer[]> {\n    const apiUrl = 'http://localhost:8080/api/cliente';\n    return this.http.get<Customer[]>(apiUrl);\n  }\n\n  saveCustomer(newCustomer: Customer): Observable<Customer> {\n    const apiUrl = 'http://localhost:8080/api/cliente';\n    return this.http.post<Customer>(apiUrl, newCustomer);\n  }\n\n  deleteCustomer(id: number): Observable<void> {\n    const apiUrl = `http://localhost:8080/api/cliente/${id}`;\n    return this.http.delete<void>(apiUrl);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}