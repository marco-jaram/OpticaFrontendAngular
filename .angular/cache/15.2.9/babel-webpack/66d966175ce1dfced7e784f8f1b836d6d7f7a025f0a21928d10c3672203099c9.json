{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CustomerComponent_tr_52_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\")(18, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function CustomerComponent_tr_52_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const customer_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteCustomer(customer_r1.id));\n    });\n    i0.ɵɵtext(19, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const customer_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.tel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 7, customer_r1.lastVisitDate));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 9, customer_r1.nextVisitDate));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(customer_r1.note);\n  }\n}\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class CustomerComponent {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/cliente';\n    this.customers = [];\n    this.newCustomer = {\n      id: 0,\n      name: '',\n      tel: '',\n      email: '',\n      lastVisitDate: new Date(),\n      nextVisitDate: new Date(),\n      note: ''\n    };\n    this.selectedCustomerId = null;\n  }\n  ngOnInit() {\n    this.getCustomers();\n  }\n  getCustomers() {\n    this.http.get(this.apiUrl).subscribe(customers => {\n      this.customers = customers;\n    });\n  }\n  saveCustomer() {\n    this.http.post(this.apiUrl, this.newCustomer).subscribe(customer => {\n      this.customers.push(customer);\n      this.newCustomer = {\n        id: 0,\n        name: '',\n        tel: '',\n        email: '',\n        lastVisitDate: new Date(),\n        nextVisitDate: new Date(),\n        note: ''\n      };\n    });\n  }\n  deleteCustomer(id) {\n    this.selectedCustomerId = id;\n    if (confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\n      this.performDelete();\n    } else {\n      this.selectedCustomerId = null;\n      console.log(\"Eliminación cancelOpticaCentroCrud-Frontendlada\");\n    }\n  }\n  performDelete() {\n    if (this.selectedCustomerId !== null) {\n      this.http.delete(`${this.apiUrl}/${this.selectedCustomerId}`).subscribe(() => {\n        this.customers = this.customers.filter(customer => customer.id !== this.selectedCustomerId);\n        this.getCustomers(); // Actualizar la lista de clientes después de la eliminación\n      });\n\n      this.selectedCustomerId = null;\n      console.log(\"Cliente eliminado\");\n    }\n  }\n}\nCustomerComponent.ɵfac = function CustomerComponent_Factory(t) {\n  return new (t || CustomerComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerComponent,\n  selectors: [[\"app-customer\"]],\n  decls: 54,\n  vars: 15,\n  consts: [[3, \"submit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"tel\"], [\"type\", \"text\", \"id\", \"tel\", \"required\", \"\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"lastVisitDate\"], [\"type\", \"date\", \"id\", \"lastVisitDate\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"netxVisitDate\"], [\"type\", \"date\", \"id\", \"netxVisitDate\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"note\"], [\"id\", \"note\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"table\"], [1, \"thead-dark\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function CustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Agregar cliente\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function CustomerComponent_Template_form_submit_2_listener() {\n        return ctx.saveCustomer();\n      });\n      i0.ɵɵelementStart(3, \"label\", 1);\n      i0.ɵɵtext(4, \"Nombre:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.newCustomer.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵelementStart(7, \"label\", 3);\n      i0.ɵɵtext(8, \"Tel:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.newCustomer.tel = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵelementStart(11, \"label\", 5);\n      i0.ɵɵtext(12, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.newCustomer.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"label\", 7);\n      i0.ɵɵtext(16, \"Ultima visita:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.newCustomer.lastVisitDate = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵelementStart(19, \"label\", 9);\n      i0.ɵɵtext(20, \"Proxima:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.newCustomer.nextVisitDate = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵelementStart(23, \"label\", 11);\n      i0.ɵɵtext(24, \"Notas:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"textarea\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_textarea_ngModelChange_25_listener($event) {\n        return ctx.newCustomer.note = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"br\");\n      i0.ɵɵelementStart(27, \"button\", 13);\n      i0.ɵɵtext(28, \"Guardar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(29, \"br\");\n      i0.ɵɵelementStart(30, \"table\", 14)(31, \"caption\");\n      i0.ɵɵtext(32, \"Datos de cliente\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"thead\", 15)(34, \"tr\")(35, \"th\");\n      i0.ɵɵtext(36, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"th\");\n      i0.ɵɵtext(38, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"th\");\n      i0.ɵɵtext(40, \"Tel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"th\");\n      i0.ɵɵtext(42, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"th\");\n      i0.ɵɵtext(44, \"Ultima visita\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"th\");\n      i0.ɵɵtext(46, \"Proxima\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"th\");\n      i0.ɵɵtext(48, \"Notas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"th\");\n      i0.ɵɵtext(50, \"Acciones\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(51, \"tbody\");\n      i0.ɵɵtemplate(52, CustomerComponent_tr_52_Template, 20, 11, \"tr\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(53, \"hr\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCustomer.name)(\"ngModelOptions\", i0.ɵɵpureFunction0(11, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCustomer.tel)(\"ngModelOptions\", i0.ɵɵpureFunction0(12, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCustomer.email)(\"ngModelOptions\", i0.ɵɵpureFunction0(13, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCustomer.lastVisitDate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCustomer.nextVisitDate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCustomer.note)(\"ngModelOptions\", i0.ɵɵpureFunction0(14, _c0));\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngForOf\", ctx.customers);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i2.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","CustomerComponent","constructor","http","id","name","tel","email","lastVisitDate","Date","nextVisitDate","note","ngOnInit","getCustomers","get","apiUrl","subscribe","customers","saveCustomer","post","newCustomer","customer","push","deleteCustomer","selectedCustomerId","confirm","performDelete","console","log","delete","filter","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/marco/Documents/Developer/opticaCentro/opticaCentro/src/app/home/customer.component.html","/home/marco/Documents/Developer/opticaCentro/opticaCentro/src/app/home/customer.component.ts"],"sourcesContent":["\n\n<!-- Agregando cliente -->\n<h2>Agregar cliente</h2>\n<form (submit)=\"saveCustomer()\">\n  <label for=\"name\">Nombre:</label>\n \n  <input type=\"text\" id=\"name\"  [(ngModel)]=\"newCustomer.name\" [ngModelOptions]=\"{standalone: true}\" required>\n\n<br>\n\n  <label for=\"tel\">Tel:</label>\n  <input type=\"text\" id=\"tel\"   [(ngModel)]=\"newCustomer.tel\"[ngModelOptions]=\"{standalone: true}\" required>\n<br>\n \n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" [(ngModel)]=\"newCustomer.email\" [ngModelOptions]=\"{standalone: true}\" required>\n<br>\n  <label for=\"lastVisitDate\">Ultima visita:</label>\n  <input type=\"date\" id=\"lastVisitDate\" [(ngModel)]=\"newCustomer.lastVisitDate\" required>\n<br>\n  <label for=\"netxVisitDate\">Proxima:</label>\n  <input type=\"date\" id=\"netxVisitDate\" [(ngModel)]=\"newCustomer.nextVisitDate\" required>\n<br>\n  <label for=\"note\">Notas:</label>\n  <textarea id=\"note\" [(ngModel)]=\"newCustomer.note\" [ngModelOptions]=\"{standalone: true}\"></textarea>\n<br>\n  <button class=\"btn btn-primary\" type=\"submit\">Guardar</button>\n</form>\n<br>\n\n<!-- lista de todos los clientes -->\n<table class=\"table\" >\n  <caption>Datos de cliente</caption>\n  <thead class=\"thead-dark\">\n    <tr >\n      <th>ID</th>\n      <th>Nombre</th>\n      <th>Tel</th>\n      <th>Email</th>\n      <th>Ultima visita</th>\n      <th>Proxima</th>\n      <th>Notas</th>\n      <th>Acciones</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let customer of customers\">\n      <td>{{ customer.id }}</td>\n      <td>{{ customer.name }}</td>\n      <td>{{ customer.tel }}</td>\n      <td>{{ customer.email }}</td>\n      <td>{{ customer.lastVisitDate | date }}</td>\n      <td>{{ customer.nextVisitDate | date }}</td>\n      <td>{{ customer.note }}</td>\n      <td>\n        <button class=\"btn btn-danger\" (click)=\"deleteCustomer(customer.id)\">Eliminar</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<hr>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgModelOptions } from '@angular/forms';\n\ninterface Customer {\n  id: number;\n  name: string;\n  tel: string;\n  email: string;\n  lastVisitDate: Date;\n  nextVisitDate: Date;\n  note: string;\n}\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n  apiUrl = 'http://localhost:8080/api/cliente';\n  customers: Customer[] = [];\n  newCustomer: Customer = {\n    id: 0,\n    name: '',\n    tel: '',\n    email: '',\n    lastVisitDate: new Date(),\n    nextVisitDate: new Date(),\n    note: ''\n  };\n\n  \n  selectedCustomerId: number | null = null; \n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getCustomers();\n  }\n\n  getCustomers(): void {\n    this.http.get<Customer[]>(this.apiUrl).subscribe(customers => {\n      this.customers = customers;\n    });\n  }\n\n  saveCustomer(): void {\n    this.http.post<Customer>(this.apiUrl, this.newCustomer).subscribe(customer => {\n      this.customers.push(customer);\n      this.newCustomer = {\n        id: 0,\n        name: '',\n        tel: '',\n        email: '',\n        lastVisitDate: new Date(),\n        nextVisitDate: new Date(),\n        note: ''\n      };\n    });\n  }\n\n  deleteCustomer(id: number): void {\n    this.selectedCustomerId = id;\n    if (confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\n      this.performDelete();\n    } else {\n      this.selectedCustomerId = null;\n      console.log(\"Eliminación cancelOpticaCentroCrud-Frontendlada\");\n    }\n  }\n\n  performDelete(): void {\n    if (this.selectedCustomerId !== null) {\n      this.http.delete<void>(`${this.apiUrl}/${this.selectedCustomerId}`).subscribe(() => {\n        this.customers = this.customers.filter(customer => customer.id !== this.selectedCustomerId);\n        this.getCustomers(); // Actualizar la lista de clientes después de la eliminación\n      });\n      this.selectedCustomerId = null;\n      console.log(\"Cliente eliminado\");\n    }\n  }\n  \n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}